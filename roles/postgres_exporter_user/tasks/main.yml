- name: baseos.repo のバックアップを取得（present 時のみ）
  copy:
    src: /etc/yum.repos.d/almalinux-baseos.repo
    dest: /etc/yum.repos.d/almalinux-baseos.repo.bak
    remote_src: true
    backup: no
  when: deploy_state == 'present'

- name: baseos.repo を新しい内容に置き換え（present 時）
  copy:
    src: files/almalinux-baseos.repo.new
    dest: /etc/yum.repos.d/almalinux-baseos.repo
    mode: '0644'
  when: deploy_state == 'present'

- name: baseos.repo をバックアップから復元（absent 時）
  copy:
    src: /etc/yum.repos.d/almalinux-baseos.repo.bak
    dest: /etc/yum.repos.d/almalinux-baseos.repo
    remote_src: true
  when: deploy_state == 'absent'

- name: PostgreSQL用pythonライブラリをインストール (Debian系)
  apt:
    name: python3-psycopg2
    state: present
  when: ansible_os_family == 'Debian'

- name: PostgreSQL用pythonライブラリをインストール (RHEL系)
  dnf:
    name: python3-psycopg2
    state: present
  when: ansible_os_family == 'RedHat'

- block:
    - name: 作業前にpg_hba.confをバックアップ
      copy:
        src: "{{ postgres_pg_hba_path }}"
        dest: "{{ postgres_pg_hba_path }}.bak"
        remote_src: true
      when: deploy_state == 'present'

    - name: exporter_user 作成または削除
      community.postgresql.postgresql_user:
        name: "{{ pg_user }}"
        password: "{{ pgexp_pass }}"
        db: postgres
        state: "{{ deploy_state }}"
        encrypted: true
      become_user: postgres

    - name: exporter_userのpg_monitorロール付与または削除
      community.postgresql.postgresql_membership:
        group: pg_monitor
        target_roles: "{{ pg_user }}"
        state: "{{ deploy_state }}"
      become_user: postgres
      when: deploy_state == 'present'

    - name: pg_hba.conf に exporter_user の設定を追加（deploy_state == 'present'）
      lineinfile:
        path: "{{ postgres_pg_hba_path }}"
        line: "host    postgres    {{ pg_user }}    {{ exporter_allowed_address }}    md5"
        create: yes
        state: present
        insertafter: EOF
      when: deploy_state == 'present'
      notify: Reload PostgreSQL

    - name: pg_hba.conf から exporter_user の設定を削除（deploy_state == 'absent'）
      lineinfile:
        path: "{{ postgres_pg_hba_path }}"
        line: "host    postgres    {{ pg_user }}    {{ exporter_allowed_address }}    md5"
        state: absent
      when: deploy_state == 'absent'
      notify: Reload PostgreSQL

  rescue:
    - name: エラー時にpg_hba.confをロールバック
      copy:
        src: "{{ postgres_pg_hba_path }}.bak"
        dest: "{{ postgres_pg_hba_path }}"
        remote_src: true
      notify: Reload PostgreSQL

    - name: エラー時の通知
      debug:
        msg: "エラーが発生したため、設定をロールバックしました。"