###########################################################################
# 0) インスタンス定義の読み込み（無ければスキップ）
###########################################################################
- name: Load instance list from designated file
  ansible.builtin.include_vars:
    file: "{{ exporter_vars_file }}"
  delegate_to: localhost

###############################################################################
# PRESENT: Podman + sops インストール & Exporter 起動
###############################################################################
- block:

    ###########################################################################
    # 1) secrets ディレクトリ
    ###########################################################################
    - name: Ensure secrets dir
      ansible.builtin.file:
        path: /etc/postgres_exporter
        state: directory
        mode: "0700"

    ###########################################################################
    # 1.5) age 鍵を生成（初回のみ）& 公開鍵取得
    ###########################################################################
    - name: Check if age key exists
      ansible.builtin.stat:
        path: /etc/sops/age/keys.txt
      register: age_key_stat

    - name: Ensure age key directory exists
      ansible.builtin.file:
        path: /etc/sops/age
        state: directory
        owner: root
        mode: "0700"

    # Detect age-keygen path
    - name: Find age-keygen binary
      ansible.builtin.set_fact:
        age_keygen_bin: >-
          {{
            '/usr/bin/age-keygen'
            if (ansible_facts.packages.get('age', []) | length > 0)
            else '/usr/local/bin/age/age-keygen'
          }}

    # Generate keypair
    - name: Generate age keypair
      ansible.builtin.command: "{{ age_keygen_bin }} -o /etc/sops/age/keys.txt"
      when: not age_key_stat.stat.exists
      changed_when: true

    - name: Read age public key
      ansible.builtin.command: grep -m1 -o 'age1[0-9a-z]*' /etc/sops/age/keys.txt
      register: age_pub
      changed_when: false

    ###########################################################################
    # 2) インスタンスごとに .enc.env を動的生成
    ###########################################################################

    # 2-A) 平文 .env を生成
    - name: Create plaintext .env
      ansible.builtin.copy:
        dest: "/tmp/{{ item.name }}.env"
        content: |
          DATA_SOURCE_NAME=postgresql://{{ item.db_user }}:{{ item.db_pass }}@{{ item.db_host }}:{{ item.db_port }}/{{ item.db_name }}?sslmode=disable
        owner: root
        group: root
        mode: "0600"
      loop: "{{ pg_exporters }}"
      no_log: true
      become: true

    # 2-B) sops + age 公開鍵で暗号化
    - name: Encrypt .env with sops + age
      ansible.builtin.command:
        cmd: >
          /usr/bin/sops --encrypt
          --age {{ age_pub.stdout }}
          --output /etc/postgres_exporter/{{ item.name }}.enc.env
          /tmp/{{ item.name }}.env
      args:
        creates: "/etc/postgres_exporter/{{ item.name }}.enc.env"
      loop: "{{ pg_exporters }}"
      register: sops_encrypt_result
      become: true

    # 2-C) 平文ファイルを削除
    - name: Remove plaintext .env
      ansible.builtin.file:
        path: "/tmp/{{ item.name }}.env"
        state: absent
      loop: "{{ pg_exporters }}"
      no_log: true
      become: true

    ###########################################################################
    # 3) systemd テンプレート本体
    ###########################################################################
    - name: Deploy template unit
      ansible.builtin.template:
        src: postgres_exporter@.service.j2
        dest: /etc/systemd/system/postgres_exporter@.service
        mode: "0644"
        force: true

    ###########################################################################
    # 4) インスタンスごとのポート drop-in
    ###########################################################################
    - name: Ensure drop-in directory exists
      ansible.builtin.file:
        path: "/etc/systemd/system/postgres_exporter@{{ item.name }}.service.d"
        state: directory
        owner: root
        mode: "0755"
      loop: "{{ pg_exporters }}"

    - name: Create drop-in with listen port
      ansible.builtin.copy:
        dest: "/etc/systemd/system/postgres_exporter@{{ item.name }}.service.d/10-port.conf"
        content: |
          [Service]
          Environment="pg_exporter_port={{ item.exporter_port }}"
        mode: "0644"
      loop: "{{ pg_exporters }}"

    - meta: flush_handlers

    ###########################################################################
    # 5) 起動
    ###########################################################################
    - name: Enable & start each exporter
      ansible.builtin.systemd:
        name: "postgres_exporter@{{ item.name }}"
        enabled: true
        state: restarted
        daemon_reload: true
      loop: "{{ pg_exporters }}"

  when:
    - deploy_state == 'present'

###############################################################################
# ABSENT: 完全撤去
###############################################################################
- block:
    - name: Stop & disable instances
      ansible.builtin.systemd:
        name: "postgres_exporter@{{ item.name }}"
        state: stopped
        enabled: false
      loop: "{{ pg_exporters }}"
      ignore_errors: true

    - name: Remove drop-in & enc.env, template unit
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop: >
        {{
          pg_exporters
            | map(attribute='name')
            | map('regex_replace','(.*)','/etc/systemd/system/postgres_exporter@\\1.service.d')
            | list
          +
          pg_exporters
            | map(attribute='name')
            | map('regex_replace','(.*)','/etc/postgres_exporter/\\1.enc.env')
            | list
          +
          ['/etc/systemd/system/postgres_exporter@.service']
        }}
      notify: reload systemd
    
    - name: Remove fallback apt key
      ansible.builtin.file:
        path: /etc/sops/age/keys.txt
        state: absent
      ignore_errors: true

    - name: Remove secrets dir
      ansible.builtin.file:
        path: /etc/postgres_exporter
        state: absent
      ignore_errors: true

    - meta: flush_handlers
  when:
    - deploy_state == 'absent'

